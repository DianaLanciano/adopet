[{"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\index.tsx":"1","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\App\\App.tsx":"2","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\About\\About.tsx":"3","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericSearch.ts":"4","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\hooks\\useDebounce.ts":"5","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\AllPetsIndex\\AllPetsIndex.tsx":"6","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Contact\\Contact.tsx":"7","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Pet\\Pet.tsx":"8","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\RequestSentSuccessfully\\RequestSentSuccessfully.tsx":"9","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\AdoptionRequest\\CreateAdoptionRequest\\CreateAdoptionRequest.tsx":"10","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericSort.ts":"11","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\api\\PetAPI.ts":"12","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericFilter.ts":"13","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\api\\AdoptionRequestAPI.ts":"14","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\SearchInput\\SearchInput.tsx":"15","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Footer\\Footer.tsx":"16","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Home\\Home.tsx":"17","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Navigator\\Navigator.tsx":"18","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Filters\\Filters.tsx":"19","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Navbar\\Navbar.tsx":"20"},{"size":470,"mtime":1612966168070,"results":"21","hashOfConfig":"22"},{"size":214,"mtime":1610785797979,"results":"23","hashOfConfig":"22"},{"size":9778,"mtime":1613309759842,"results":"24","hashOfConfig":"22"},{"size":600,"mtime":1613219194858,"results":"25","hashOfConfig":"22"},{"size":438,"mtime":1613162438655,"results":"26","hashOfConfig":"22"},{"size":2943,"mtime":1613309759842,"results":"27","hashOfConfig":"22"},{"size":4743,"mtime":1613309759843,"results":"28","hashOfConfig":"22"},{"size":2803,"mtime":1613146721800,"results":"29","hashOfConfig":"22"},{"size":736,"mtime":1613238513132,"results":"30","hashOfConfig":"22"},{"size":9784,"mtime":1613239481780,"results":"31","hashOfConfig":"22"},{"size":697,"mtime":1613219194858,"results":"32","hashOfConfig":"22"},{"size":2184,"mtime":1613309759841,"results":"33","hashOfConfig":"22"},{"size":446,"mtime":1613219194857,"results":"34","hashOfConfig":"22"},{"size":1990,"mtime":1613331908898,"results":"35","hashOfConfig":"22"},{"size":985,"mtime":1613219894724,"results":"36","hashOfConfig":"22"},{"size":1612,"mtime":1613298641187,"results":"37","hashOfConfig":"22"},{"size":6022,"mtime":1613238237488,"results":"38","hashOfConfig":"22"},{"size":1605,"mtime":1613238237489,"results":"39","hashOfConfig":"22"},{"size":1919,"mtime":1613219194855,"results":"40","hashOfConfig":"22"},{"size":1923,"mtime":1613116739900,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"157wd3f",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\index.tsx",[],["89","90"],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\App\\App.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\About\\About.tsx",[],["91","92"],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericSearch.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\hooks\\useDebounce.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\AllPetsIndex\\AllPetsIndex.tsx",["93","94","95","96"],"import React, { useEffect, useState } from 'react';\r\nimport { match, RouteComponentProps } from 'react-router-dom';\r\nimport { getPets } from '../../api/PetAPI';\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport './AllPetsIndex.css';\r\n\r\nimport PetGrid from '../PetGrid/PetGrid';\r\nimport IFilter from '../../interfaces/IFilter';\r\nimport ISorter from '../../interfaces/ISorter';\r\nimport { genericFilter } from '../../utils/genericFilter';\r\nimport { genericSearch } from '../../utils/genericSearch';\r\nimport { genericSort } from '../../utils/genericSort';\r\nimport { Filters } from '../Filters/Filters';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\nimport Sorters from '../Sorters/Sorters';\r\ninterface Props extends RouteComponentProps {\r\n  match: match<{ petId: string }>;\r\n}\r\n\r\nexport const AllPetsIndex: React.FC<Props> = () => {\r\n  const [pets, setPets] = useState<IPet[]>([\r\n    { _id: '', age: 0, animalType: '', breed: '', name: '', isAdopted: false},\r\n  ]);\r\n  const [query, setQuery] = useState<string>('');\r\n  const [activeSorter, setActiveSorter] = useState<ISorter<IPet>>({\r\n    property: 'name',\r\n    isDescending: true,\r\n  });\r\n  const [activeFilters, setActiveFilters] = useState<Array<IFilter<IPet>>>([]);\r\n\r\n  useEffect(() => {\r\n    fetchPets();\r\n  }, []);\r\n\r\n  //todo: remove fetching all pets (we need to fetch only pets that passed filtering)\r\n  const fetchPets = (): void => {\r\n    getPets()\r\n      .then(({ data: { pets } }: IPet[] | any) => setPets(pets))\r\n      .catch(() => console.log(`err on fetchPets`));\r\n  };\r\n\r\n  const resultPets = pets\r\n    .filter((pet) => genericSearch<IPet>(pet, ['name', 'animalType'], query))\r\n    .filter((pet) => genericFilter<IPet>(pet, activeFilters))\r\n    .sort((petA, petB) => genericSort<IPet>(petA, petB, activeSorter));\r\n\r\n  return (\r\n    <div>\r\n      <SearchInput onChangeSearchQuery={(query) => setQuery(query)} />\r\n      <Sorters<IPet>\r\n        object={pets[0]}\r\n        onChangeSorter={(property, isDescending) => {\r\n          setActiveSorter({\r\n            property,\r\n            isDescending,\r\n          });\r\n        }}\r\n      />\r\n      <Filters<IPet>\r\n        object={pets[0]}\r\n        filters={activeFilters}\r\n        onChangeFilter={(changedFilterProperty, checked, isActive) => {\r\n          checked\r\n            ? setActiveFilters([\r\n                ...activeFilters.filter(\r\n                  (filter) => filter.property !== changedFilterProperty\r\n                ),\r\n                { property: changedFilterProperty, isActive },\r\n              ])\r\n            : setActiveFilters(\r\n                activeFilters.filter(\r\n                  (filter) => filter.property !== changedFilterProperty\r\n                )\r\n              );\r\n        }}\r\n      />\r\n      <h3>Results:</h3>\r\n      {resultPets.length > 0 && <PetGrid pets={resultPets} count={9999} />}\r\n      {resultPets.length === 0 && <p>No results found!</p>}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Contact\\Contact.tsx",["97","98"],"import React, { ReactElement, useState } from \"react\";\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBIcon, MDBBtn, MDBInput, MDBContainer } from \"mdbreact\";\r\nimport './Contact.css';\r\nimport RequestSentSuccessfully from \"../RequestSentSuccessfully/RequestSentSuccessfully\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Contact: React.FC = (): ReactElement => {\r\n\r\n  const [formSent, setFormSent] = useState(false);\r\n\r\n  function handleSubmit(){\r\n    setFormSent(true);\r\n  }\r\n\r\n  if(formSent){\r\n    return <Redirect to=\"/requestSent\" />;\r\n  }\r\n  return (\r\n    <section className=\"contact margetop\">\r\n      <h2 className=\"h1-responsive font-weight-bold text-center \">\r\n        Contact us\r\n      </h2>\r\n      <p className=\"text-center w-responsive mx-auto pb-5\">\r\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit,\r\n        error amet numquam iure provident voluptate esse quasi, veritatis\r\n        totam voluptas nostrum quisquam eum porro a pariatur veniam.\r\n      </p>\r\n      <MDBRow>\r\n        <MDBCol lg=\"5\" className=\"lg-0 mb-4\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 grey lighten-2\">\r\n              <MDBRow className=\"d-flex justify-content-start\">\r\n                <h3 className=\"deep-grey-text mt-3 mb-4 pb-1 mx-5\">Write to us:</h3>\r\n              </MDBRow>\r\n            </div>\r\n            <MDBCardBody>\r\n              <div className=\"form-header blue accent-1\">\r\n              </div>\r\n              <p className=\"dark-grey-text\">\r\n                We'll write rarely, but only the best content.\r\n              </p>\r\n              <div className=\"md-form\">\r\n                <MDBInput\r\n                  icon=\"user\"\r\n                  label=\"Your name\"\r\n                  iconClass=\"grey-text\"\r\n                  type=\"text\"\r\n                  id=\"form-name\"\r\n                />\r\n              </div>\r\n              <div className=\"md-form\">\r\n                <MDBInput\r\n                  icon=\"envelope\"\r\n                  label=\"Your email\"\r\n                  iconClass=\"grey-text\"\r\n                  type=\"text\"\r\n                  id=\"form-email\"\r\n                />\r\n              </div>\r\n              <div className=\"md-form\">\r\n                <MDBInput\r\n                  icon=\"tag\"\r\n                  label=\"Subject\"\r\n                  iconClass=\"grey-text\"\r\n                  type=\"text\"\r\n                  id=\"form-subject\"\r\n                />\r\n              </div>\r\n              <div className=\"md-form\">\r\n                <MDBInput\r\n                  icon=\"pencil-alt\"\r\n                  label=\"Your Message\"\r\n                  iconClass=\"grey-text\"\r\n                  type=\"textarea\"\r\n                  id=\"form-text\"\r\n                />\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <MDBBtn onClick={() => handleSubmit()} color=\"light-blue\">Submit</MDBBtn>\r\n              </div>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n        <MDBCol lg=\"7\">\r\n          <div\r\n            id=\"map-container\"\r\n            className=\"rounded z-depth-1-half map-container\"\r\n            style={{ height: \"400px\" }}\r\n          >\r\n            <iframe\r\n              src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyBS8EZj9KdhPM5G07vW1ABQ132YpLiXmVc&q=Elie Wiesel St 2, Rishon LeTsiyon\"\r\n              title=\"Adop(e)t office\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              frameBorder=\"1\"\r\n              style={{ border: 1 }}\r\n            />\r\n          </div>\r\n          <br />\r\n          <MDBCard>\r\n            <MDBCardBody>\r\n              <MDBRow className=\"text-center\">\r\n                <MDBCol md=\"4\">\r\n                  <MDBBtn tag=\"a\" floating color=\"blue\" className=\"accent-1\">\r\n                    <MDBIcon icon=\"map-marker-alt\" />\r\n                  </MDBBtn>\r\n                  <p>Elie Wiesel St 2, Rishon LeTsiyon</p>\r\n                  <p className=\"mb-md-0\">Israel</p>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <MDBBtn tag=\"a\" floating color=\"blue\" className=\"accent-1\">\r\n                    <MDBIcon icon=\"phone\" />\r\n                  </MDBBtn>\r\n                  <p>+ 01 234 567 89</p>\r\n                  <p className=\"mb-md-0\">Mon - Fri, 8:00-22:00</p>\r\n                </MDBCol>\r\n                <MDBCol md=\"4\">\r\n                  <MDBBtn tag=\"a\" floating color=\"blue\" className=\"accent-1\">\r\n                    <MDBIcon icon=\"envelope\" />\r\n                  </MDBBtn>\r\n                  <p className=\"mb-md-0\">adopetwebsite@gmail.com</p>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </section>\r\n  \r\n  );\r\n};\r\n\r\nexport default Contact;","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Pet\\Pet.tsx",["99","100","101","102","103","104","105"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport './Pet.css';\r\nimport img from '../../assets/images/img_avatar2.png';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { getPet } from '../../api/PetAPI';\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol, MDBMask, MDBIcon, MDBRow, MDBView, MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { addAdoptionRequest } from '../../api/AdoptionRequestAPI';\r\n\r\ninterface Props extends RouteComponentProps<{ petId: string }>, IPetProps {}\r\n\r\nconst Pet: React.FC<Props> = ({ match }) => {\r\n  const [pet, setPet] = useState<IPet>();\r\n\r\n  console.log(match.params.petId);\r\n\r\n  useEffect(() => {\r\n    fetchPet(match.params.petId);\r\n  }, [match.params.petId]);\r\n\r\n  const fetchPet = (petId: string): void => {\r\n    getPet(petId)\r\n      .then(({ data: { pet } }: IPet | any) => setPet(pet))\r\n      .catch(() => console.log(`err on fetchPet`));\r\n  };\r\n\r\n \r\n\r\n  if (!pet) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div >\r\n\r\n    <MDBCard className=\"my-5 px-5 pb-5\">\r\n      <MDBCardBody>\r\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n          {pet.animalType} Page: {pet.name}\r\n        </h2>\r\n        <p className=\"text-center w-responsive mx-auto mb-5\">\r\n          Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n          cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n          cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n          anim id est laborum.\r\n        </p>\r\n        <MDBRow>\r\n          <MDBCol lg=\"5\">\r\n            <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n              <img\r\n                className=\"img-fluid\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Others/img%20(27).jpg\"\r\n                alt=\"\"\r\n              />\r\n              <a href=\"#!\">\r\n                <MDBMask overlay=\"white-slight\" />\r\n              </a>\r\n            </MDBView>\r\n          </MDBCol>\r\n          <MDBCol lg=\"6\">\r\n          <MDBTable striped>\r\n      <MDBTableBody>\r\n        <tr>\r\n          <td>Name:</td>\r\n          <td>{pet.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Type:</td>\r\n          <td>{pet.animalType}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Age:</td>\r\n          <td>{pet.age}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Breed:</td>\r\n          <td>{pet.breed}</td>\r\n        </tr>\r\n      </MDBTableBody>\r\n    </MDBTable>\r\n    <Fragment>\r\n      <Link key={pet._id} to={`/AdoptionForm/${pet._id}`} >\r\n      <MDBBtn gradient=\"peach\">Adopt Me!!!</MDBBtn>\r\n      </Link>\r\n    </Fragment>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        </MDBCardBody>\r\n    </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pet;\r\n",["106","107"],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\RequestSentSuccessfully\\RequestSentSuccessfully.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\AdoptionRequest\\CreateAdoptionRequest\\CreateAdoptionRequest.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericSort.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\api\\PetAPI.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\utils\\genericFilter.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\api\\AdoptionRequestAPI.ts",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\SearchInput\\SearchInput.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Footer\\Footer.tsx",["108"],"import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.css';\r\n\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport About from \"../About/About\";\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <MDBFooter color=\"blue-gradient\" className=\"font-small pt-4 mt-4\">\r\n      <MDBContainer fluid className=\"text-center text-md-left\">\r\n        <MDBRow>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Footer Content</h5>\r\n            <p>\r\n              Here you can use rows and columns here to organize your footer\r\n              content.\r\n            </p>\r\n          </MDBCol>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Links</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n              <Link to={'/about'} >About</Link>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 2</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 3</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 4</a>\r\n              </li>\r\n            </ul>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.wwe.com/f/2019/01/tlc_12132009rf_1089--5ed6a6b8f3616585fd6c87730d18b4dc.jpg\"> Matan Hassin </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default FooterPage;\r\n\r\n","C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Home\\Home.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Navigator\\Navigator.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Filters\\Filters.tsx",[],"C:\\Users\\Yonatan\\Documents\\Coding\\GitHub\\adopet\\adopet\\client\\front\\src\\components\\Navbar\\Navbar.tsx",["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"121","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":4,"column":26,"nodeType":"119","messageId":"120","endLine":4,"endColumn":33},{"ruleId":"117","severity":1,"message":"123","line":4,"column":35,"nodeType":"119","messageId":"120","endLine":4,"endColumn":46},{"ruleId":"117","severity":1,"message":"124","line":2,"column":75,"nodeType":"119","messageId":"120","endLine":2,"endColumn":87},{"ruleId":"117","severity":1,"message":"125","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":31},{"ruleId":"117","severity":1,"message":"126","line":6,"column":40,"nodeType":"119","messageId":"120","endLine":6,"endColumn":52},{"ruleId":"117","severity":1,"message":"127","line":6,"column":54,"nodeType":"119","messageId":"120","endLine":6,"endColumn":66},{"ruleId":"117","severity":1,"message":"128","line":6,"column":68,"nodeType":"119","messageId":"120","endLine":6,"endColumn":79},{"ruleId":"117","severity":1,"message":"129","line":6,"column":98,"nodeType":"119","messageId":"120","endLine":6,"endColumn":105},{"ruleId":"117","severity":1,"message":"124","line":6,"column":124,"nodeType":"119","messageId":"120","endLine":6,"endColumn":136},{"ruleId":"117","severity":1,"message":"130","line":6,"column":162,"nodeType":"119","messageId":"120","endLine":6,"endColumn":174},{"ruleId":"117","severity":1,"message":"131","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":28},{"ruleId":"111","replacedBy":"132"},{"ruleId":"113","replacedBy":"133"},{"ruleId":"117","severity":1,"message":"134","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"117","severity":1,"message":"135","line":10,"column":3,"nodeType":"119","messageId":"120","endLine":10,"endColumn":10},{"ruleId":"117","severity":1,"message":"136","line":11,"column":3,"nodeType":"119","messageId":"120","endLine":11,"endColumn":10},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"@typescript-eslint/no-unused-vars","'MDBRow' is defined but never used.","Identifier","unusedVar","'MDBCol' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'MDBContainer' is defined but never used.","'RequestSentSuccessfully' is defined but never used.","'MDBCardImage' is defined but never used.","'MDBCardTitle' is defined but never used.","'MDBCardText' is defined but never used.","'MDBIcon' is defined but never used.","'MDBTableHead' is defined but never used.","'addAdoptionRequest' is defined but never used.",["137"],["138"],"'About' is defined but never used.","'MDBMask' is defined but never used.","'MDBView' is defined but never used.","no-global-assign","no-unsafe-negation"]